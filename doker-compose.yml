version: '3.9'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.10
    container_name: zookeeper
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "2181" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:6.2.10
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "29092:29092"
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: OUTSIDE://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:29092,INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8085:8085"
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  kafka-topics-generator:
    image: confluentinc/cp-kafka:6.2.10
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic finish-registration --replication-factor 1 --partitions 2
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic create-documents --replication-factor 1 --partitions 2
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic send-documents --replication-factor 1 --partitions 2
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic send-ses --replication-factor 1 --partitions 2
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic credit-issued --replication-factor 1 --partitions 2
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic statement-denied --replication-factor 1 --partitions 2
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

  deal-db:
    image: postgres:17-alpine
    container_name: deal-db
    ports:
      - "6543:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1992

  calculator:
    build: calculator
    container_name: calculator
    ports:
      - "8080:8080"

  deal:
    build: deal
    container_name: deal
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - deal-db
      - calculator
    environment:
      - DB_URL=jdbc:postgresql://localhost:5432/postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=1992
      - CALCULATOR_URL=http://calculator:8080/calculator
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  statement:
    build: statement
    container_name: statement
    ports:
      - "8082:8082"
    depends_on:
      - deal
    environment:
      - DEAL_URL=http://deal:8081/deal

  dossier:
    build: dossier
    container_name: dossier
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - deal
    environment:
      - DEAL_URL=http://deal:8081/deal
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
